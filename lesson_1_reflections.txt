How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Using the diff command made it easy to find the bug because it clearly showed
    the text that had been changed using the "+" and "-" characters to highlight
    the changes.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Having access to the entire history of a file would make me a more efficient
    programmer because I could easily roll back changes that I want to be reversed.
    Or, I could possibly look back at an earlier version and copy some code over
    into the current version without having to recreate everything. Also, I wouldn't
    have to manually save many different versions of the same file to create my
    own version control.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros:
      - Keep things organised and make commits at logical points
      - The version history will include logical breakpoints with descriptions
      - Can roll back before a certain commit

    Cons:
      - You may forget to make commits
      - The commits you make could be either too big or too small
      - No meaningful descriptions with the versions

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git allows saving multiple files in one commit because usually programmes or
    websites are a combination of many different files. In Google docs the files
    are usually stand alone.

How can you use the commands git log and git diff to view the history of files?

    Git log shows the history of commits, git diff shows the differences between
    two commits.

How might using version control make you more confident to make changes that
could break something?

    I would be more confident to experiment because you can easily roll back any
    changes.

Now that you have your workspace set up, what do you want to try using Git for?

    I would like to use Git for some projects we are building at work.
